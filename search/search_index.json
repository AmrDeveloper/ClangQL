{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"tables/","title":"Tables","text":""},{"location":"tables/#tables-structures","title":"Tables structures","text":""},{"location":"tables/#classes-table","title":"Classes table","text":"Name Type Description name Text Class variable name is_struct Boolean True if it a struct declaration bases_count Integer Number of bases for this class methods_count Integer Number of methods declarations fields_count Integer Number of fields declarations source_loc SourceLoc Source location of AST node"},{"location":"tables/#enums-table","title":"Enums table","text":"Name Type Description name Text Enumeration name constants_count Integer Number of constants in this enum type_literal Text Type literal for enum constants source_loc SourceLoc Source location of AST node"},{"location":"tables/#unions-table","title":"Unions table","text":"Name Type Description name Text Union name size Integer The size of union in bits fields_count Integer Number of fields declarations source_loc SourceLoc Source location of AST node"},{"location":"tables/#functions-table","title":"Functions table","text":"Name Type Description name Text Function or Method name signature Text Parameters and return type literal return_type Text Return type ast_function FunctionNode AST node of the function source_loc SourceLoc Source location of AST node"},{"location":"tables/#globals-table","title":"Globals table&lt;","text":"Name Type Description name Text Global variable name type Text Global variable type literal is_volatile Boolean True if variable type is volatile source_loc SourceLoc Source location of AST node"},{"location":"matchers/function/","title":"Function","text":""},{"location":"matchers/function/#ast-matchers-functions","title":"AST matchers functions","text":"Function Parameters Return Description m_function_decl () FunctionMatcher Create Matcher to match function declaration m_function_def () FunctionMatcher Create Matcher to match template definition m_template_function () FunctionMatcher Create Matcher to match template function m_conversion_function () FunctionMatcher Create Matcher to match conversion function m_inlined () FunctionMatcher Create Matcher to match inlined function m_virtual () FunctionMatcher Create Matcher to match virtual function m_pure_virtual () FunctionMatcher Create Matcher to match pure virtual function m_method () FunctionMatcher Create Matcher to match method m_static () FunctionMatcher Create Matcher to match static function m_const () FunctionMatcher Create Matcher to match const function m_deleted () FunctionMatcher Create Matcher to match deleted function m_constructor () FunctionMatcher Create Matcher to match constructor m_default_constructor () FunctionMatcher Create Matcher to match default constructor m_copy_constructor () FunctionMatcher Create Matcher to match copy constructor m_move_constructor () FunctionMatcher Create Matcher to match move constructor m_converting_constructor () FunctionMatcher Create Matcher to match converting constructor m_destructor () FunctionMatcher Create Matcher to match function is destructor m_public () FunctionMatcher Create Matcher to match public function m_protected () FunctionMatcher Create Matcher to match protected function m_private () FunctionMatcher Create Matcher to match private function"},{"location":"matchers/function/#combine-matchers-functions","title":"Combine matchers functions","text":"Function Parameters Return Description m_oneof (n : ...FunctionMatcher) FunctionMatcher Create a matcher that returns true if any sub matcher is true m_allof (n : ...FunctionMatcher) FunctionMatcher Create a matcher that returns true if all of sub matcher are true m_noneof (n : ...FunctionMatcher) FunctionMatcher Create a matcher that returns true if none of sub matcher are true"}]}